{"version":3,"sources":["index.js"],"names":["getEpisodeDataFromSeed","seedID","episodeData","createBracketItem","a","bi","document","createElement","bis","classList","add","setAttribute","ed","innerText","concat","href","target","rel","appendChild","buildBracketStructure","roundData","roundID","console","debug","group","entries","winnerWrapper","winner","winnerWhitespace","Array","isArray","forEach","let","k","v","Object","bs","info","fetchOpts","method","credentials","mode","bracketStructure","await","window","fetch","json","g_episodeData","g_bracketStructure","leftBracketData","rightBracketData","lbc","querySelector","rbc","overallWinnerSID","log","elem","epData","innerHTML","setTimeout","innerWidth","innerHeight","alert"],"mappings":"CAAA,UAIC,SAASA,EAAuBC,GAC/B,OAAOC,EAAYD,EACpB,CAGA,SAASE,EAAkBF,GAC1B,IAeQG,EAfFC,EAAKC,SAASC,cAAc,KAAK,EAGjCC,GAFNH,EAAGI,UAAUC,IAAI,cAAc,EAEnBJ,SAASC,cAAc,MAAM,GA0BzC,OAzBAC,EAAIC,UAAUC,IAAI,mBAAmB,EAErCF,EAAIG,aAAa,eAAgBV,CAAM,EAG1B,EAATA,EAGgB,MAFbW,EAAKZ,EAAuBC,CAAM,GAE3B,KACZO,EAAIK,UAAS,GAAAC,OAAMF,EAAU,KAAC,IAExBR,EAAIE,SAASC,cAAc,GAAG,GAClCQ,KAAOH,EAAS,KAClBR,EAAEY,OAAS,SACXZ,EAAEa,IAAM,WACRb,EAAES,UAAYD,EAAU,MAExBJ,EAAIU,YAAYd,CAAC,GAGlBI,EAAIK,UAAY,MAGjBR,EAAGa,YAAYV,CAAG,EAEXH,CACR,CAEA,SAASc,EAAsBC,EAAWC,GACzCC,QAAQC,MAAM,0BAA2B,aAAcF,EAAS,eAAgBD,CAAS,EAGnFI,EAAQlB,SAASC,cAAc,KAAK,EAC1CiB,EAAMf,UAAUC,IAAI,OAAO,EAE3B,IAAMe,EAAUnB,SAASC,cAAc,KAAK,EAC5CkB,EAAQhB,UAAUC,IAAI,SAAS,EAE/B,IAAMgB,EAAgBpB,SAASC,cAAc,KAAK,EAG5CoB,GAFND,EAAcjB,UAAUC,IAAI,gBAAgB,EAE7BJ,SAASC,cAAc,KAAK,GAGrCqB,GAFND,EAAOlB,UAAUC,IAAI,QAAQ,EAEJJ,SAASC,cAAc,KAAK,GAQrD,GAPAqB,EAAiBnB,UAAUC,IAAI,mBAAmB,EAElDiB,EAAOT,YAAYf,EAAkBiB,EAAkB,MAAC,CAAC,EACzDM,EAAcR,YAAYS,CAAM,EAChCD,EAAcR,YAAYU,CAAgB,EAGtCC,MAAMC,QAAQV,EAAmB,OAAC,EACrCE,QAAQC,MAAM,0BAA2B,qCAAsCH,EAAmB,OAAC,EAEnGA,EAAmB,QAAEW,QAAS9B,IAC7BwB,EAAQP,YAAYf,EAAkBF,CAAM,CAAC,CAC9C,CAAC,MACK,CACNqB,QAAQC,MAAM,0BAA2B,0BAA0B,EAGnE,IAAKS,GAAI,CAACC,EAAGC,KAAMC,OAAOV,QAAQL,EAAmB,OAAC,EAAG,CAClDgB,EAAKjB,EAAsBe,EAAGD,CAAC,EAErCG,EAAGzB,aAAa,KAAI,SAAAG,OAAWmB,CAAC,CAAE,EAElCR,EAAQP,YAAYkB,CAAE,CACvB,CACD,CAOA,OAHAZ,EAAMN,YAAYO,CAAO,EACzBD,EAAMN,YAAYQ,CAAa,EAExBF,CACR,CA1FAF,QAAQe,KAAK,WAAW,EAqGxB,IAAMC,EAAY,CACjBC,OAAQ,MACRC,YAAa,UACbC,KAAM,SACP,EAEMC,EAAmBC,MAAM,MAAOC,OAAOC,MAAM,0BAA2BP,CAAS,GAAGQ,KAAK,EAG/F,IAAM5C,EAAcyC,MAAM,MAAOC,OAAOC,MAAM,yBAA0BP,CAAS,GAAGQ,KAAK,EACzFC,cAAgB7C,EAChB8C,mBAAqBN,EAErBpB,QAAQC,MAAMrB,CAAW,EACzBoB,QAAQC,MAAMmB,CAAgB,EAE9B,IAAMO,EAAkBP,EAAiB,KAAgB,QAAE,KACrDQ,EAAmBR,EAAiB,KAAgB,QAAE,KAEtDS,EAAM7C,SAAS8C,cAAc,OAAO,EACpCC,EAAM/C,SAAS8C,cAAc,QAAQ,EASrCE,GAPNhC,QAAQiC,IAAI,SAAU,wCAAwC,EAC9DJ,EAAIjC,YAAYC,EAAsB8B,EAAiB,KAAK,CAAC,EAE7D3B,QAAQiC,IAAI,SAAU,yCAAyC,EAC/DF,EAAInC,YAAYC,EAAsB+B,EAAkB,KAAK,CAAC,EAGrCR,EAAiB,KAAe,QAClC,EAAnBY,IAvC2BrD,EAwCRqD,EAvChBE,EAAOlD,SAAS8C,cAAc,sBAAsB,EACpDK,EAASzD,EAAuBC,CAAM,EAE5CuD,EAAKE,UAAS,YAAA5C,OAAe2C,EAAa,KAAC,mCAAA,EAAA3C,OAAoC2C,EAAc,MAAC,MAAA,GA0C/Fb,OAAOe,WAAW,MACbf,OAAOgB,WAAahB,OAAOiB,aAAejB,OAAOgB,WAAa,OACjEE,MAAM,8MAA8M,CAEtN,EAAG,GAAG,EAENxC,QAAQe,KAAK,mDAAmD,CAChE,GAAE","file":"index.min.js","sourcesContent":["(async () => {\n\tconsole.info('start it!');\n\n\t// Get episode title, number, YouTube URL from seed\n\tfunction getEpisodeDataFromSeed(seedID) {\n\t\treturn episodeData[seedID];\n\t}\n\n\t// bracket item element constructor\n\tfunction createBracketItem(seedID) {\n\t\tconst bi = document.createElement(\"div\");\n\t\tbi.classList.add(\"bracket-item\");\n\n\t\tconst bis = document.createElement(\"span\");\n\t\tbis.classList.add(\"bracket-item-name\");\n\n\t\tbis.setAttribute(\"data-seed-id\", seedID);\n\n\t\t// seedID will be -1 for undeclared winner slots etc.\n\t\tif (seedID > 0) {\n\t\t\tconst ed = getEpisodeDataFromSeed(seedID);\n\n\t\t\tif (ed[\"link\"] === \"\") {\n\t\t\t\tbis.innerText = `${ed['title']}`\n\t\t\t} else {\n\t\t\t\tconst a = document.createElement(\"a\");\n\t\t\t\ta.href = ed[\"link\"];\n\t\t\t\ta.target = \"_blank\";\n\t\t\t\ta.rel = \"noopener\";\n\t\t\t\ta.innerText = ed[\"title\"];\n\n\t\t\t\tbis.appendChild(a);\n\t\t\t}\n\t\t} else {\n\t\t\tbis.innerText = \"tbd\";\n\t\t}\n\n\t\tbi.appendChild(bis);\n\n\t\treturn bi;\n\t}\n\n\tfunction buildBracketStructure(roundData, roundID) {\n\t\tconsole.debug(\"[buildBracketStructure]\", \"roundID is\", roundID, \"roundData is\", roundData);\n\n\t\t// I'm sure I could template all this crap but idc (^:\n\t\tconst group = document.createElement(\"div\");\n\t\tgroup.classList.add(\"group\");\n\n\t\tconst entries = document.createElement(\"div\");\n\t\tentries.classList.add(\"entries\");\n\n\t\tconst winnerWrapper = document.createElement(\"div\");\n\t\twinnerWrapper.classList.add(\"winner-wrapper\");\n\n\t\tconst winner = document.createElement(\"div\");\n\t\twinner.classList.add(\"winner\");\n\n\t\tconst winnerWhitespace = document.createElement(\"div\");\n\t\twinnerWhitespace.classList.add(\"winner-whitespace\");\n\n\t\twinner.appendChild(createBracketItem(roundData[\"winner\"]));\n\t\twinnerWrapper.appendChild(winner);\n\t\twinnerWrapper.appendChild(winnerWhitespace);\n\n\t\t// deepest level is an array of seedIDs\n\t\tif (Array.isArray(roundData[\"entries\"])) {\n\t\t\tconsole.debug(\"[buildBracketStructure]\", \"building entries from seedID array\", roundData[\"entries\"]);\n\n\t\t\troundData[\"entries\"].forEach((seedID) => {\n\t\t\t\tentries.appendChild(createBracketItem(seedID));\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.debug(\"[buildBracketStructure]\", \"recursing down the tree!\");\n\n\t\t\t// recurse down this mf!\n\t\t\tfor (let [k, v] of Object.entries(roundData[\"entries\"])) {\n\t\t\t\tconst bs = buildBracketStructure(v, k);\n\n\t\t\t\tbs.setAttribute(\"id\", `round-${k}`);\n\n\t\t\t\tentries.appendChild(bs);\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Add background color to highlight winning entries?\n\n\t\tgroup.appendChild(entries);\n\t\tgroup.appendChild(winnerWrapper);\n\n\t\treturn group;\n\t}\n\n\tfunction populateOverallWinner(seedID) {\n\t\tconst elem = document.querySelector(\"#overall-winner > h2\");\n\t\tconst epData = getEpisodeDataFromSeed(seedID);\n\n\t\telem.innerHTML = `<a href=\"${epData['link']}\" target=\"_blank\" rel=\"noopener\">${epData['title']}</a>`;\n\t}\n\n\t// Pass these options to fetch() calls so they work with <link rel=\"preload\" as=\"fetch\"> from the HTML\n\t// https://stackoverflow.com/a/63814972/3722806\n\tconst fetchOpts = {\n\t\tmethod: 'GET',\n\t\tcredentials: 'include',\n\t\tmode: 'no-cors',\n\t}\n\n\tconst bracketStructure = await (await window.fetch(\"data/structure.min.json\", fetchOpts)).json();\n\n\t// for testing\n\tconst episodeData = await (await window.fetch(\"data/episodes.min.json\", fetchOpts)).json();\n\tg_episodeData = episodeData;\n\tg_bracketStructure = bracketStructure;\n\n\tconsole.debug(episodeData);\n\tconsole.debug(bracketStructure);\n\n\tconst leftBracketData = bracketStructure[\"141\"][\"entries\"][\"139\"];\n\tconst rightBracketData = bracketStructure[\"141\"][\"entries\"][\"140\"];\n\n\tconst lbc = document.querySelector(\"#left\");\n\tconst rbc = document.querySelector(\"#right\");\n\n\tconsole.log(\"[main]\", \"Populating left side of the bracket...\");\n\tlbc.appendChild(buildBracketStructure(leftBracketData, \"139\"));\n\n\tconsole.log(\"[main]\", \"Populating right side of the bracket...\");\n\trbc.appendChild(buildBracketStructure(rightBracketData, \"140\"));\n\n\t// HACK: This shouldn't be hardcoded lol\n\tconst overallWinnerSID = bracketStructure[\"141\"][\"winner\"];\n\tif (overallWinnerSID > 0) {\n\t\tpopulateOverallWinner(overallWinnerSID);\n\t}\n\n\t// HACK: yeah this looks like cheeks on phones right now. let's make the alert\n\t// look like cheeks too\n\t// (use a small timeout so the page renders in first)\n\twindow.setTimeout(() => {\n\t\tif (window.innerWidth < window.innerHeight || window.innerWidth < 1200) {\n\t\t\talert(\"hey what's up :D\\n\\nthis site kinda looks like butt on moble/small screens right now. sorry about that.\\n\\nanyway go ahead and hit \\\"OK\\\" just know you're gonna have to scroll around a bunch.\\n\\n\\tâ€”audrey\");\n\t\t}\n\t}, 100);\n\n\tconsole.info('finished doing literally everything :steamhappy: ');\n})();\n"]}